annotation.processing.enabled=true
annotation.processing.enabled.in.editor=false
annotation.processing.processors.list=
annotation.processing.run.all.processors=true
annotation.processing.source.output=${build.generated.sources.dir}/ap-source-output
application.desc=/**\n * **CorretivaApp: Uma Aplica\u00e7\u00e3o de Controle e Gest\u00e3o de Ordens de Servi\u00e7o**\n *\n * Esta aplica\u00e7\u00e3o JavaFX fornece uma plataforma para o controle e gest\u00e3o de ordens de servi\u00e7o\n * em um ambiente de manuten\u00e7\u00e3o corretiva. A aplica\u00e7\u00e3o possui funcionalidades como autentica\u00e7\u00e3o,\n * registro de ordens de servi\u00e7o, bloqueio de contas e integra\u00e7\u00e3o com CAPTCHA para seguran\u00e7a\n * adicional.\n *\n * **Estrutura do Projeto:**\n * - **`CorretivaApp` (Principal):**\n *   - Inicia a aplica\u00e7\u00e3o JavaFX, carrega a tela de login e configura o controlador associado.\n *   - Gerencia a autentica\u00e7\u00e3o de funcion\u00e1rios, bloqueio de contas e intera\u00e7\u00f5es com CAPTCHA.\n *   - Fornece m\u00e9todos para mostrar mensagens de erro de forma interativa.\n *\n * - **`Funcionario` e `FuncionarioController`:**\n *   - Representa um funcion\u00e1rio e lida com opera\u00e7\u00f5es relacionadas a funcion\u00e1rios.\n *   - Utiliza o algoritmo BCrypt para garantir a seguran\u00e7a das senhas.\n *\n * - **`CaptchaDialog`:**\n *   - Uma caixa de di\u00e1logo interativa para resolver CAPTCHAs.\n *\n * - **Testes com TestFX:**\n *   - Utiliza a biblioteca TestFX para testes automatizados de interface do usu\u00e1rio.\n *   - Inclui um teste b\u00e1sico de intera\u00e7\u00e3o para a tela de login.\n *\n * **Boas Pr\u00e1ticas e Considera\u00e7\u00f5es de Seguran\u00e7a:**\n * - Organiza\u00e7\u00e3o do c\u00f3digo em pacotes para modularidade.\n * - Uso de logs para registrar eventos significativos.\n * - Configura\u00e7\u00e3o de BCrypt para garantir a seguran\u00e7a das senhas.\n * - Tratamento adequado de erros com mensagens claras para os usu\u00e1rios.\n * - Manipula\u00e7\u00e3o correta de threads JavaFX usando `Platform.runLater`.\n * - Evita mensagens m\u00e1gicas e mant\u00e9m valores configur\u00e1veis em constantes.\n * - Considera\u00e7\u00f5es de seguran\u00e7a, como bloqueio de contas e CAPTCHA ap\u00f3s tentativas falhas.\n *\n * **Como Testar:**\n * - Use a classe `CorretivaAppTest` para testes automatizados usando TestFX.\n * - Certifique-se de configurar a aplica\u00e7\u00e3o no m\u00e9todo `start` para testes interativos.\n *\n * **Observa\u00e7\u00e3o:**\n * Certifique-se de consultar a documenta\u00e7\u00e3o espec\u00edfica de cada classe para detalhes adicionais.\n */\n
application.title=CorretivaTccAPP
application.vendor=RA200252575 Eng. Sotware
auxiliary.org-netbeans-spi-editor-hints-projects.perProjectHintSettingsFile=nbproject/cfg_hints.xml
auxiliary.org-zeroturnaround-jrebel-netbeans.rebelXmlGenerationInvariantToken=PGFwcGxpY2F0aW9uIGdlbmVyYXRlZC1ieT0ibmV0YmVhbnMiPjxjbGFzc3BhdGg+PGRpciBuYW1lPSJDOi9Vc2Vycy9mYW1pbHkgc2lsdmEvT25lRHJpdmUgLSBVbmljZXN1bWFyIC0gQ2VudHJvIFVuaXZlcnNpdMOhcmlvIENlc3VtYXIvRG9jdW1lbnRvcy9OZXRCZWFuc1Byb2plY3RzL0NvcnJldGl2YVRjY0FQUC9idWlsZC9jbGFzc2VzIj48L2Rpcj48L2NsYXNzcGF0aD48L2FwcGxpY2F0aW9uPg==
build.classes.dir=${build.dir}/classes
build.classes.excludes=**/*.java,**/*.form
# This directory is removed when the project is cleaned:
build.dir=build
build.generated.dir=${build.dir}/generated
build.generated.sources.dir=${build.dir}/generated-sources
# Only compile against the classpath explicitly listed here:
build.sysclasspath=ignore
build.test.classes.dir=${build.dir}/test/classes
build.test.results.dir=${build.dir}/test/results
copylibs.excludes=${javafx.classpath.extension}
# Uncomment to specify the preferred debugger connection transport:
#debug.transport=dt_socket
debug.classpath=\
    ${run.classpath}
debug.modulepath=\
    ${run.modulepath}
debug.test.classpath=\
    ${run.test.classpath}
debug.test.modulepath=\
    ${run.test.modulepath}
# Files in build.classes.dir which should be excluded from distribution jar
dist.archive.excludes=
# This directory is removed when the project is cleaned:
dist.dir=dist
dist.jar=${dist.dir}/CorretivaTccAPP.jar
dist.javadoc.dir=${dist.dir}/javadoc
dist.jlink.dir=${dist.dir}/jlink
dist.jlink.output=${dist.jlink.dir}/CorretivaTccAPP
endorsed.classpath=
excludes=
file.reference.mysql-connector-j-8.2.0.jar=lib\\mysql-connector-j-8.2.0.jar
includes=**
jar.archive.disabled=${jnlp.enabled}
jar.compress=true
jar.index=${jnlp.enabled}
javac.classpath=\
    ${libs.CopyLibs.classpath}:\
    ${file.reference.mysql-connector-j-8.2.0.jar}
# Space-separated list of extra javac options
javac.compilerargs=
javac.deprecation=true
javac.external.vm=true
javac.modulepath=
javac.processormodulepath=
javac.processorpath=\
    ${javac.classpath}
javac.source=21
javac.target=21
javac.test.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}:\
    ${libs.junit_5.classpath}
javac.test.modulepath=\
    ${javac.modulepath}
javac.test.processorpath=\
    ${javac.test.classpath}
javadoc.additionalparam=
javadoc.author=false
javadoc.encoding=${source.encoding}
javadoc.html5=false
javadoc.noindex=false
javadoc.nonavbar=false
javadoc.notree=false
javadoc.private=false
javadoc.splitindex=true
javadoc.use=true
javadoc.version=false
javadoc.windowtitle=
# The jlink additional root modules to resolve
jlink.additionalmodules=
# The jlink additional command line parameters
jlink.additionalparam=
jlink.launcher=true
jlink.launcher.name=CorretivaTccAPP
jnlp.codebase.type=no.codebase
jnlp.descriptor=application
jnlp.enabled=false
jnlp.mixed.code=default
jnlp.offline-allowed=false
jnlp.signed=false
jnlp.signing=
jnlp.signing.alias=
jnlp.signing.keystore=
keep.javafx.runtime.on.classpath=true
main.class=corretivaapp.CorretivaAPP
# Optional override of default Application-Library-Allowable-Codebase attribute identifying the locations where your signed RIA is expected to be found.
manifest.custom.application.library.allowable.codebase=
# Optional override of default Caller-Allowable-Codebase attribute identifying the domains from which JavaScript code can make calls to your RIA without security prompts.
manifest.custom.caller.allowable.codebase=
# Optional override of default Codebase manifest attribute, use to prevent RIAs from being repurposed
manifest.custom.codebase=
# Optional override of default Permissions manifest attribute (supported values: sandbox, all-permissions)
manifest.custom.permissions=
manifest.file=manifest.mf
meta.inf.dir=${src.dir}/META-INF
mkdist.disabled=false
native.bundling.enabled=true
platform.active=default_platform
run.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}
# Space-separated list of JVM arguments used when running the project.
# You may also define separate properties like run-sys-prop.name=value instead of -Dname=value.
# To set system properties for unit tests define test-sys-prop.name=value:
run.jvmargs=
run.modulepath=\
    ${javac.modulepath}
run.test.classpath=\
    ${javac.test.classpath}:\
    ${build.test.classes.dir}
run.test.modulepath=\
    ${javac.test.modulepath}
source.encoding=UTF-8
src.dir=src
test.src.dir=test
